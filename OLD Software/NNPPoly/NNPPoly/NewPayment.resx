<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAICAAAAEAIACoEAAAJgAAABAQAAABACAAaAQAAM4QAAAoAAAAIAAAAEAAAAABACAAAAAAAIAQ
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAgAAAAMAAAAEAAAABQAAAAZAAAAHQAA
        ACIAAAAmAAAAKQAAACwVFRVFNjY2+TMzM/8zMzP/Ozs7zAAAAB4AAAAYAAAAFAAAAA8AAAAKAAAABgAA
        AAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAEQAAABsAAAAiAAAAKQAAADAAAAA2AAAAPQAA
        AEQAAABLAAAAUgAAAFgAAABfAAAAZhQUFH1JSUn13eDf/8DCwf87OzvsAAAAPQAAADYAAAAwAAAAKQAA
        ACIAAAAbAAAAFAAAAA4AAAAHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFAAAADAAAABEAAAAWAAAAHAAA
        ACAAAAAlAAAAKQAAACwAAAAvAAAAMQAAADIAAAAzHBwcWUlJSfPX29n/u768/zs7O+kAAAAkAAAAIAAA
        ABsAAAAWAAAAEQAAAAsAAAAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAzMzMwSUlJ8NHV0/+2ubf/PDw85QAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADMzMzBISUjwy9DO/7G1
        s/88PDzlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMzMzAzMzMzYzMzNzOzs7nD8/P749Pj7ZODg48Vla
        WvPFy8j/s7m2/zc3N/o9PT3WPDw8rDQ0NHwzMzNMMzMzAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANDQ0YT4/PsM3Nzf3R0dH8XJzcveMjo3/mp2c/6er
        qf+0ubb/wMbE/7/Fw/+8wsD/rrSy/5iem/+HjIr/dnl4+05PTvE5OjrqNTU1dDMzMw4AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA1NTX7nqGg/8bJx//P09H/zNHP/8nO
        zP/Gy8n/wsjG/7/Fw/+8w8D/ucC9/7a9uv+4v7z/u8G//77Ewv/Bx8T/xMrH/6qvrP9lZ2bzOjo65TMz
        MxMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADU1NfvKz83/zNHP/8nO
        zP/Gy8n/w8jG/8DGw/+9w8D/sbi1/7C3tP+4vrv/u8G+/7vBvv/Bx8T/xMrH/8fMyv/Kz83/zdLQ/9DV
        0/+Bg4L5PDw8zTMzMwYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANTU1+8TJ
        x//GzMn/r7Sy/3t+fPxZW1rxRkdH8Dg4OPg2Nzb3UFJR8r3Ewf+zuLX/ODg4+0JDQ/Nqa2v2wMTC/9DU
        0//T19b/1trY/9nd2/9kZWX1NDQ0bQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAA1NTX7g4aF/kxNTfA5OTnwOTo6ljMzM1QzMzMxMzMzDjMzMzBGR0fww8nH/7C0sv88PDzmMzMzLDc3
        N6Vyc3L21trY/9nd2//c397/3+Lh/6Slpf9AQUG2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAADw8PMA7PDuoMzMzRDMzMwIAAAAAAAAAAAAAAAAAAAAAMzMzMEdIR/DJzsz/tLi3/zw8
        POUAAAAAMzMzGTY2Nvva3dz/3+Lh/+Ll5P/l6Of/y83N/zw8POsAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAzMzMwSEhI8M/U
        0v+5vbz/PT095QAAAAAzMzNiWFlZ8uLl4//l5+b/6Orp/+vt7P/d397/Nzc3+AAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADMz
        MzBISUnw1dnX/77BwP83Nzf2PT094D09Pfa5u7r/6Orp/+vt7P/u8O//8fLy/8TExP9CQkLTAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMzMzIzMz
        M2A7OzulOzs751pbW/Pb3t3/3N/e/5udnf+9v7//5+no/+vs7P/u7+//8fLy//T19P/3+Pf/np6e/j8/
        P5wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAzMzMBMzMzUjs8
        PN0/Pz/zZ2lo8ZaYl/+/wcD/2t3c/+Hk4//k5+b/5+np/+rs6//t7+7/8fLx//T19P/39/f/+vr6/+Dg
        4P89PT30MzMzKgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMzMzGTs7
        O9lLTEzzpaen/9fb2v/b3t3/3uHf/+Hk4v/k5uX/5+no/+rs6//t7+7/8PLx//P09P/29/f/+fr6//39
        /f/Kysr/S0xM9Dg4OGQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADMz
        MwQ7PDzOgoSD+9ba2P/a3tz/3eHf/+Hj4v/k5uX/5+no/+rs6//t7+7/8PHx//P09P/29/f/+fr6/+3u
        7f/BwcH/YWFh8jw8POgzMzNeAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAANzc3eFxdXfXZ3dv/3eDf/+Dj4v/j5uX/5uno/+rs6//t7u7/8PHx//P08//19vX/p6in/3V1
        dfRHR0fyOTk59kFBQcY0NDRmMzMzBQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
</value>
  </data>
</root>