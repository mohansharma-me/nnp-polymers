using System;
using System.Collections.Generic;
using System.Linq;
using System.Windows.Forms;
using NNPPoly;
using System.Globalization;
using System.IO;

namespace NNPPolyLauncher
{
    static class Program
    {
        /// <summary>
        /// The main entry point for the application.
        /// </summary>
        [STAThread]
        static void Main(String[] args)
        {
            Application.SetUnhandledExceptionMode(UnhandledExceptionMode.ThrowException);
            AppDomain.CurrentDomain.UnhandledException += (s, e) =>
            {
                Exception excep = e.ExceptionObject as Exception;
                if (excep != null)
                {
                    //DialogResult diag = MessageBox.Show("Unknown error generated by software, please see log file in installation folder or contact developer team with this error message:" + Environment.NewLine + Environment.NewLine + excep, "Unknown Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                    try
                    {
                        //frmMain.Log("Error[Unhandled]", excep);
                        Job.Log("Error[Unhandled]",excep);
                    }
                    catch (Exception) { }
                }
            };

            Application.EnableVisualStyles();
            Application.SetCompatibleTextRenderingDefault(false);
            
            Application.Run(new frmSplash());
            bool actFlag = false;
            String actFile = frmMain.getAppActivationFile();
            if (File.Exists(actFile))
            {
                String data = File.ReadAllText(actFile);
                if (data.Trim().Length != 0)
                {
                    try
                    {
                        data = StringSecurity.Decrypt(data, "9722505033");
                        if (data.Trim().Equals(File.GetCreationTime(Application.ExecutablePath).ToOADate().ToString().Trim()))
                        {
                            actFlag = true;
                        }
                    }
                    catch (Exception)
                    {
                        frmMain.Log("Activation Error!!", null);
                    }
                }
            }

            #region fake-startup
            /*Job.mainForm = new frmMain(updateMethod);
            Job.DB.initiateDatabaseConnection();
            if (args.Length > 0)
            {
                if (args[0] == "upload-mgr")
                {
                    frmUploadMgr um = new frmUploadMgr(false);
                    Application.Run(um);
                }
            }
            else
            {
                System.Threading.Thread thread = new System.Threading.Thread(() =>
                {
                    try
                    {
                        while (true)
                        {
                            try
                            {
                                while (!File.Exists("request.mgr")) System.Threading.Thread.Sleep(1000);
                                if (File.Exists("request.mgr") && Job.mainForm != null)
                                {
                                    Job.mainForm.incomingEntries(System.IO.File.ReadAllText("request.mgr"));
                                }
                            }
                            catch (System.Threading.ThreadAbortException tae) { throw tae; }
                            catch (Exception ex)
                            {
                                Job.Log("UploadMgrThread", ex);
                            }
                        }
                    }
                    catch (System.Threading.ThreadAbortException) { }
                });
                thread.Name = "UploadMgrLookUpThread";
                thread.Priority = System.Threading.ThreadPriority.Normal;
                thread.Start();
                Application.Run(Job.mainForm);
                thread.Abort();
            }
            
            Job.DB.closeDatabaseConnection();
            return;
            */
            #endregion
            if (!actFlag)
            {
                frmActivation activation = new frmActivation();
                activation.ShowDialog();
                if (!activation.Suc) return;
            }

            try
            {
                Job.mainForm = new frmMain(updateMethod);

                #region UploadMgrLauncherCode
                
                #endregion

                
                #region AdministratorLauncherCode
                if (args.Length > 0)
                {
                    Job.Log("WithCMDLine", null);
                    if (args[0] == "upload-mgr")
                    {
                        frmUploadMgr um1 = new frmUploadMgr(false);
                        Application.Run(um1);
                    }
                    else
                    {
                        Job.Log("Invalid CMD Line Data", null);
                    }
                }
                else
                {
                    Job.Log("WithoutCMDLine", null);
                    System.Threading.Thread thread = new System.Threading.Thread(() =>
                    {
                        try
                        {
                            while (true)
                            {
                                try
                                {
                                    while (!File.Exists("request.mgr")) System.Threading.Thread.Sleep(1000);
                                    if (File.Exists("request.mgr") && Job.mainForm != null)
                                    {
                                        Job.mainForm.incomingEntries(System.IO.File.ReadAllText("request.mgr"));
                                    }
                                }
                                catch (System.Threading.ThreadAbortException tae) { throw tae; }
                                catch (Exception ex)
                                {
                                    Job.Log("UploadMgrThread", ex);
                                }
                            }
                        }
                        catch (System.Threading.ThreadAbortException) { }
                    });
                    thread.Name = "UploadMgrLookUpThread";
                    thread.Priority = System.Threading.ThreadPriority.Normal;
                    thread.Start();
                    Application.Run(Job.mainForm);
                    thread.Abort();
                }
                #endregion

                closeConnection:
                Job.DB.closeDatabaseConnection();
            }
            catch (Exception ex) {
                MessageBox.Show("Unable to start application, please contact software developer team.", "Fatal Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                Job.Log("Error while initializing app", ex);
            }
        }

        static void updateMethod(IWin32Window owner, String uid, String version)
        {
            new frmUpdate(uid, version).ShowDialog(owner);
        }

    }
}
